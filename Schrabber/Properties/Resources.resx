<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="EditAllPartsWindow_Label" xml:space="preserve">
    <value>Every field you change at least once will be overwritten everywhere.</value>
  </data>
  <data name="MedaListWindow_EntriesLabel" xml:space="preserve">
    <value>Entries: {0}</value>
  </data>
  <data name="MediaControl_Split" xml:space="preserve">
    <value>Split -- Parts: {0}</value>
  </data>
  <data name="MediaListWindow_FileButton" xml:space="preserve">
    <value>Add Local Files</value>
  </data>
  <data name="MediaListWindow_PlaylistButton" xml:space="preserve">
    <value>Add Youtube Playlist</value>
  </data>
  <data name="MediaListWindow_ResetButton" xml:space="preserve">
    <value>Remove All Elements</value>
  </data>
  <data name="MediaListWindow_SetFolderButton" xml:space="preserve">
    <value>Set Destination Folder</value>
  </data>
  <data name="MediaListWindow_StartButton" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="MediaListWindow_VideoButton" xml:space="preserve">
    <value>Add Youtube Video</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="no_cover" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\no_cover.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PartControl_Album" xml:space="preserve">
    <value>Album:</value>
  </data>
  <data name="PartControl_Author" xml:space="preserve">
    <value>Author:</value>
  </data>
  <data name="RemoveCover" xml:space="preserve">
    <value>Remove Cover</value>
  </data>
  <data name="SetCover" xml:space="preserve">
    <value>Set Cover</value>
  </data>
  <data name="PartControl_Start" xml:space="preserve">
    <value>Start:</value>
  </data>
  <data name="PartControl_Stop" xml:space="preserve">
    <value>Stop:</value>
  </data>
  <data name="PartControl_Title" xml:space="preserve">
    <value>Title:</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="PartListWindow_EditAllButton" xml:space="preserve">
    <value>Edit All</value>
  </data>
  <data name="PartListWindow_ImportPartsButton" xml:space="preserve">
    <value>Auto Generate</value>
  </data>
  <data name="PartListWindow_NewPartButton" xml:space="preserve">
    <value>New Part</value>
  </data>
  <data name="PartListWindow_PartsLabel" xml:space="preserve">
    <value>Parts: {0}</value>
  </data>
  <data name="PartListWindow_RemoveallPartsButton" xml:space="preserve">
    <value>Remove All Parts</value>
  </data>
  <data name="PartsGeneratorWindow_DefaultButton" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="PartsGeneratorWindow_PartsLabel" xml:space="preserve">
    <value>Parts: {0}</value>
  </data>
  <data name="ProgressWindow_FinishedLabel" xml:space="preserve">
    <value>Finished {0}</value>
  </data>
  <data name="ProgressWindow_OpenDestinationFolderButton" xml:space="preserve">
    <value>Open Destination Folder</value>
  </data>
  <data name="ProgressWindow_Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="ProgressWindow_RunningLabel" xml:space="preserve">
    <value>Running {0}</value>
  </data>
  <data name="ProgressWindow_WaitingLabel" xml:space="preserve">
    <value>Waiting {0}</value>
  </data>
  <data name="YoutubePlayListWindow_VideosLabel" xml:space="preserve">
    <value>Videos: {0}</value>
  </data>
  <data name="YoutubeVideoControl_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Youtube_DefaultButton" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Youtube_LoadButton" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="Youtube_UrlOrIdLabel" xml:space="preserve">
    <value>Youtube Url or Id:</value>
  </data>
  <data name="EditAllPartsWindow_Title" xml:space="preserve">
    <value>Schrabber - Edit All Parts</value>
  </data>
  <data name="Job_Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Job_Fetching" xml:space="preserve">
    <value>Fetching</value>
  </data>
  <data name="Job_Splitting" xml:space="preserve">
    <value>Splitting</value>
  </data>
  <data name="Job_Waiting" xml:space="preserve">
    <value>Waiting</value>
  </data>
  <data name="Job_WaitingForParent" xml:space="preserve">
    <value>Waiting for parent</value>
  </data>
  <data name="Job_WritingTags" xml:space="preserve">
    <value>Writing tags</value>
  </data>
  <data name="MediaListWindow_FFmpegNotFoundText" xml:space="preserve">
    <value>Could not find the FFmpeg executable!
FFmpeg has to be installed and in the path for this application to work.</value>
  </data>
  <data name="MediaListWindow_FFmpegNotFoundTitle" xml:space="preserve">
    <value>FFmpeg not found!</value>
  </data>
  <data name="MediaListWindow_Title" xml:space="preserve">
    <value>Schrabber</value>
  </data>
  <data name="PartListWindow_DuplicatesText" xml:space="preserve">
    <value>Duplicated parts found:
{0}</value>
  </data>
  <data name="PartListWindow_DuplicatesTitle" xml:space="preserve">
    <value>Duplicated Parts</value>
  </data>
  <data name="PartListWindow_Title" xml:space="preserve">
    <value>Schrabber - Parts</value>
  </data>
  <data name="PartsGeneratorWindow_Title" xml:space="preserve">
    <value>Schrabber - Parts Generator</value>
  </data>
  <data name="ProgressWindow_Title" xml:space="preserve">
    <value>Schrabber - Progress</value>
  </data>
  <data name="YoutubePlayListWindow_Title" xml:space="preserve">
    <value>Schrabber - Youtube Playlist</value>
  </data>
  <data name="YoutubeVideoWindow_Title" xml:space="preserve">
    <value>Schrabber - Youtube Video</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="PartsGeneratorWindow_Help" xml:space="preserve">
    <value>List of all available {{Names}} and what they mean:
{{Start}} - Start of the song
{{Stop}} - Stop/End of the song
{{Title}} - Title of the song
{{Author}} - Author /Interpret of the song
{{Album}} - Album the song is part of
{{Anything Else}} - Use this to dynamically ignore content

Meaning of Colors of Highlights
Highlighted Green - Valid
Highlighted Yellow - Invalid
Highlighted Gray - Not a valid {{Name}} (dynamically ignored)</value>
  </data>
</root>